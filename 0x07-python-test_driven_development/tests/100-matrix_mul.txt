The 100-matrix_mul module
========================

Importing function from the module:

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul


Multiply matrix:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

Multiply 2 lists of matrix:
>>> list1 = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
>>> list2 = [[1, -1, 2], [2, -1, 2], [3, -3, 0]]
>>> matrix_mul(list1, list2)
[[30, -26, 10], [36, -31, 14], [42, -36, 18]]

>>> matrix_mul([[1, 5, 7]], [[3], [5], [8]])
[[84]]

Passing None:
>>> matrix_mul(None, None)
Traceback (most recent call last):
  ...
TypeError: m_a must be a list

Passing None as a matrix:
>>> matrix_mul([[7, 12]], None)
Traceback (most recent call last):
  ...
TypeError: m_b must be a list

Passing a tuple as matrix:
>>> matrix_mul((1, 3, 5), [[1.3], [5.2], [7.7]])
Traceback (most recent call last):
  ...
TypeError: m_a must be a list

Passing a string as a matrix:
>>> matrix_mul([[3, 3], [4, 4]], "Nairobi")
Traceback (most recent call last):
  ...
TypeError: m_b must be a list


Passing a matrix with an empty list:
>>> matrix_mul([[3, 1, 16], [], [1, 4, 5]], [[7], [9], [4]])
Traceback (most recent call last):
  ...
TypeError: each row of m_a must be of the same size


Matrix with rows of different size:
>>> matrix_mul([[3, 3, 3], [4, 4, 4]], [[2], [5, 5]])
Traceback (most recent call last):
  ...
TypeError: each row of m_b must be of the same size


Passing one argument:
>>> matrix_mul([[6, 1]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
